server {
    server_name files.matik.live;
    location / {
        autoindex on;
        root /home/files;
    }
}

server {
    server_name url.matik.live;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass http://localhost:5050;
    }
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/matiklive/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/matiklive/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    server_name chess.matik.live;
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass http://localhost:5555;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/matiklive/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/matiklive/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
server {
    if ($host = url.matik.live) {
        return 301 https://$host$request_uri;
    }
    if ($host = chess.matik.live) {
        return 301 https://$host$request_uri;
    }
    server_name url.matik.live chess.matik.live;

    listen 80;
    return 404; # managed by Certbot
}